// Mocks generated by Mockito 5.2.0 from annotations
// in top_football_team/test/repositories/premier_league_repository.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:top_football_team/services/premier_league_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeClient_0 extends _i1.Fake implements _i2.Client {}

/// A class which mocks [PremierLeagueService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPremierLeagueService extends _i1.Mock
    implements _i3.PremierLeagueService {
  MockPremierLeagueService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeClient_0()) as _i2.Client);
  @override
  set client(_i2.Client? _client) =>
      super.noSuchMethod(Invocation.setter(#client, _client),
          returnValueForMissingStub: null);
  @override
  _i4.Future<dynamic> getStandingsJson() =>
      (super.noSuchMethod(Invocation.method(#getStandingsJson, []),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> getRecentMatchesJson(
          {String? dateTo, String? dateFrom}) =>
      (super.noSuchMethod(
          Invocation.method(#getRecentMatchesJson, [],
              {#dateTo: dateTo, #dateFrom: dateFrom}),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> getTeamJson({dynamic id}) =>
      (super.noSuchMethod(Invocation.method(#getTeamJson, [], {#id: id}),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
}
